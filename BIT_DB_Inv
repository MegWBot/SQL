/*How many orders were placed in January?*/
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

/*How many of those orders were for an iPhone?*/
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID'

/*#3. Select the customer account numbers for all the orders that were placed in February.*/ 
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

/*Which product was the cheapest one sold in January, and what was the price?*/

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE  price in (SELECT min(price) FROM BIT_DB.JanSales)

/*What is the total revenue for each product sold in January?*/
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product
#PLEASE NOTE: Are you unsure why we use sum(quantity)*price here? See Question 5 notes below the answer section for an explanation.

/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?*/
select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

/*How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?*/
select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

/* List all products sold in February in Los Angeles, and how many of each were sold */

SELECT product, sum(quantity)
FROM BIT_DB.FebSales
Where location like '%Los Angeles%'
GROUP BY product
ORDER BY quantity desc;

/* Querying a table of Spotify data. The table includes:

{CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );}

/*What is the average danceability by artist and track?*/

SELECT artist_name, track_name, AVG(danceability) as avg_danceability
FROM spotifydata
GROUP BY artist_name, track_name;

/* What is the correlation between popularity and energy? */

SELECT 
    (COUNT(*) * SUM(danceability * energy) - SUM(danceability) * SUM(energy)) / 
    SQRT((COUNT(*) * SUM(danceability * danceability) - SUM(danceability) * SUM(danceability)) *
         (COUNT(*) * SUM(energy * energy) - SUM(energy) * SUM(energy)))
    AS correlation_coefficient
FROM spotifydata;

/* What's the average danceability for the 10 most popular songs? */

SELECT track_name, popularity, AVG(DANCEABILITY)
FROM spotifydata
GROUP BY artist_name
ORDER BY popularity desc
Limit 10;

/* Who are the top 10 artists based on popularity? */

SELECT distinct(artist_name), AVG(popularity) as popularity
FROM spotifydata
GROUP BY artist_name
ORDER BY popularity desc
Limit 10;

/* What artist released the longest song? */
SELECT artist_name, track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms desc
Limit 1;




 
